import great_expectations as gx
import sys

# 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å Root Directory)
CONTEXT_DIR = "include/gx"
CHECKPOINT_NAME = "covid_checkpoint"

# 2. Path ‡∏Ç‡∏≠‡∏á Mock Data ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÉ‡∏ô CI (Path ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å Root ‡∏Ç‡∏≠‡∏á Repository)
MOCK_DATA_PATH = "tests/mock_data/covid_sample.csv"

# 3. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Batch Request ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ Override
# ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö Checkpoint YAML ‡πÅ‡∏ï‡πà‡πÉ‡∏™‡πà MOCK_DATA_PATH ‡πÅ‡∏ó‡∏ô
batch_request_override = {
    "datasource_name": "covid_datasource",
    "data_connector_name": "default_runtime_data_connector_name",
    "data_asset_name": "covid_19_clean",
    "runtime_parameters": {
        "path": MOCK_DATA_PATH # <--- Path ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CI
    },
    "batch_identifiers": {
        "default_identifier_name": "covid_batch"
    }
}

try:
    # ‡πÇ‡∏´‡∏•‡∏î Data Context ‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    context = gx.get_context(context_root_dir=CONTEXT_DIR)
    
    print(f"Running Checkpoint '{CHECKPOINT_NAME}' with Mock Data Path: {MOCK_DATA_PATH}")

    # üõë ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ 'validations' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö Override ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô YAML
    results = context.run_checkpoint(
        checkpoint_name=CHECKPOINT_NAME,
        validations=[
            {
                "batch_request": batch_request_override,
                "expectation_suite_name": "covid_data_suite", # ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠ Expectation Suite
            }
        ]
    )

    if not results.get("success", False):
        print("\n!!! Data Quality Check FAILED !!!")
        sys.exit(1)
    
    print("\n‚úÖ Data Quality Check PASSED.")
    
except Exception as e:
    print(f"An error occurred during Great Expectations run: {e}")
    sys.exit(1)
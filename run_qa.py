import great_expectations as gx
import sys
import pandas as pd
# ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ RuntimeBatchRequest ‡πÅ‡∏•‡πâ‡∏ß
# from great_expectations.core.batch import RuntimeBatchRequest 

# 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
CONTEXT_DIR = "include/gx"
# CHECKPOINT_NAME = "covid_checkpoint" # üõë ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ Checkpoint Name ‡πÅ‡∏•‡πâ‡∏ß
MOCK_DATA_PATH = "tests/mock_data/covid_sample.csv"
SUITE_NAME = "covid_data_suite" # ‡∏ä‡∏∑‡πà‡∏≠ Expectation Suite ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ

try:
    context = gx.get_context(context_root_dir=CONTEXT_DIR)
    
    # üõë 1. ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Mock Data ‡∏î‡πâ‡∏ß‡∏¢ Pandas
    data_df = pd.read_csv(MOCK_DATA_PATH)
    print(f"Loaded data from {MOCK_DATA_PATH}. Data shape: {data_df.shape}")

    # üõë 2. ‡∏£‡∏±‡∏ô Validation Operator ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (Bypass Checkpoint)
    print(f"Running Validation Suite '{SUITE_NAME}' directly on DataFrame...")

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Validation Batch List ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    validation_batch = [
        {
            "batch": data_df,  # ‡∏™‡πà‡∏á DataFrame ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
            "expectation_suite_name": SUITE_NAME
        }
    ]

    # ‡πÉ‡∏ä‡πâ Validation Operator ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    results = context.run_validation_operator(
        "action_list_operator", # ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ Validation Operator ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Default
        assets_to_validate=validation_batch,
        # ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ run_id ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Data Docs (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        run_id=f"ci_run_{pd.Timestamp.now().strftime('%Y%m%d%H%M%S')}"
    )

    if not results.get("success", False):
        print("\n!!! Data Quality Check FAILED !!!")
        sys.exit(1)
    
    print("\n‚úÖ Data Quality Check PASSED.")
    
except Exception as e:
    print(f"An error occurred during Great Expectations run: {e}")
    sys.exit(1)
import great_expectations as gx
import sys
import pandas as pd
from great_expectations.core.batch import RuntimeBatchRequest # ‚¨ÖÔ∏è ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ô‡∏µ‡πâ

# 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
CONTEXT_DIR = "include/gx"
MOCK_DATA_PATH = "tests/mock_data/covid_sample.csv"
SUITE_NAME = "covid_data_suite" 
DATASOURCE_NAME = "covid_datasource" # ‡∏ä‡∏∑‡πà‡∏≠ Datasource ‡πÉ‡∏ô great_expectations.yml

try:
    context = gx.get_context(context_root_dir=CONTEXT_DIR)
    
    # 1. ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Mock Data ‡∏î‡πâ‡∏ß‡∏¢ Pandas
    data_df = pd.read_csv(MOCK_DATA_PATH)
    print(f"Loaded data from {MOCK_DATA_PATH}. Data shape: {data_df.shape}")

    # üõë 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á RuntimeBatchRequest ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (DataFrame) ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
    runtime_batch_request = RuntimeBatchRequest(
        datasource_name=DATASOURCE_NAME,
        data_connector_name="default_runtime_data_connector_name",
        data_asset_name="covid_19_clean",
        runtime_parameters={"batch_data": data_df}, # ‚¨ÖÔ∏è ‡∏™‡πà‡∏á DataFrame ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
        batch_identifiers={"default_identifier_name": "covid_batch"}
    )
    
    # üõë 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Batch Object (Batch List) ‡∏à‡∏≤‡∏Å Request
    # Great Expectations ‡∏à‡∏∞‡πÉ‡∏ä‡πâ Request ‡πÅ‡∏•‡∏∞ DataFrame ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Batch Object ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    batch_list = context.get_batch_list(batch_request=runtime_batch_request)

    # üõë 4. ‡∏£‡∏±‡∏ô Validation Operator ‡∏ö‡∏ô Batch List
    print(f"Running Validation Suite '{SUITE_NAME}'...")
    
    results = context.run_validation_operator(
        "action_list_operator", 
        assets_to_validate=[
            {
                # ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ 'batch_list' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á Batch Object ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Operator
                "batch_list": batch_list, 
                "expectation_suite_name": SUITE_NAME
            }
        ]
    )

    # 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞ Data Docs (Optional)
    context.save_validation_result(results)
    context.build_data_docs()

    if not results.get("success", False):
        print("\n!!! Data Quality Check FAILED !!!")
        sys.exit(1)
    
    print("\n‚úÖ Data Quality Check PASSED. (Data Docs updated)")
    
except Exception as e:
    print(f"An error occurred during Great Expectations run: {e}")
    # ‡πÉ‡∏ä‡πâ print(e) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π error ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
    sys.exit(1)
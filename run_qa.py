import great_expectations as gx
import sys
import pandas as pd
# ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á import RuntimeBatchRequest ‡πÅ‡∏•‡πâ‡∏ß

# 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
CONTEXT_DIR = "include/gx"
MOCK_DATA_PATH = "tests/mock_data/covid_sample.csv"
SUITE_NAME = "covid_data_suite" # ‡∏ä‡∏∑‡πà‡∏≠ Expectation Suite ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ

try:
    context = gx.get_context(context_root_dir=CONTEXT_DIR)
    
    # 1. ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Mock Data ‡∏î‡πâ‡∏ß‡∏¢ Pandas
    data_df = pd.read_csv(MOCK_DATA_PATH)
    print(f"Loaded data from {MOCK_DATA_PATH}. Data shape: {data_df.shape}")

    # üõë 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Validator Object ‡∏à‡∏≤‡∏Å DataFrame ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    print(f"Loading Expectation Suite '{SUITE_NAME}' and creating Validator...")
    
    validator = context.get_validator(
        batch=data_df, # ‡∏™‡πà‡∏á DataFrame ‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
        expectation_suite_name=SUITE_NAME # ‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠ Suite
    )

    # üõë 3. ‡∏£‡∏±‡∏ô Validation ‡∏ö‡∏ô Validator Object
    # ‡πÄ‡∏°‡∏ò‡∏≠‡∏î validate() ‡∏ö‡∏ô Validator ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å Expectation ‡πÉ‡∏ô Suite
    results = validator.validate() 

    # üõë 4. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞ Data Docs (Optional ‡πÅ‡∏ï‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
    # ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ context.save_validation_result() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•
    context.save_validation_result(results)
    context.build_data_docs()

    if not results["success"]:
        print("\n!!! Data Quality Check FAILED !!!")
        sys.exit(1)
    
    print("\n‚úÖ Data Quality Check PASSED. (Data Docs updated)")
    
except Exception as e:
    print(f"An error occurred during Great Expectations run: {e}")
    sys.exit(1)